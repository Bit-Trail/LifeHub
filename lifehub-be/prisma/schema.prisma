generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     String
  tasks    Task[]
  habits   Habit[]
  journals  Journal[]
  goals    Goal[]
  googleRefreshToken String? @map("google_refresh_token")
  googleAccessToken  String? @map("google_access_token")
}

model Task {
  id         Int      @id @default(autoincrement())
  title      String
  category   String   @default("Personal") // "Personal" | "Professional"
  completed  Boolean  @default(false)
  dueDate    DateTime?
  reminderAt DateTime?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
}


model Habit {
  id        Int      @id @default(autoincrement())
  title     String
  frequency String   // e.g. "daily", "weekly"
  completed Boolean  @default(false)
  tracked Json @default("{}")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
}

model Journal {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  mood      String?     // optional
  date      DateTime @default(now())
  userId    Int          // üîÅ CHANGE from String ‚Üí Int
  user      User     @relation(fields: [userId], references: [id])
}

model Goal {
  id          Int      @id @default(autoincrement())
  title       String
  description String?  // optional - good ‚úÖ
  status      String   @default("Not Started") // ‚úÖ added default
  targetDate  DateTime
  createdAt   DateTime @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

